name: Test

on:
  push:
    branches:
    - test
  pull_request:
    branches:
    - main

jobs:
  prepare:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y netcat

    - name: Create directories for Cassandras clusters
      run: mkdir -p docker/data/cassandra1 docker/data/cassandra2 docker/data/cassandra3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11

    - name: Install Pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv

    - name: Install dependencies
      run: pipenv install --dev

    - name: Start containers
      run: docker-compose -f "docker-compose.yaml" up -d --build && sleep 5

    - name: Wait for Cassandra to become ready
      run: |
        echo "Waiting for Cassandra to become ready..."
        MAX_ATTEMPTS=20
        COMMAND='docker exec cassandra3 cqlsh --debug cassandra3 9042 --execute="DESCRIBE SCHEMA;"'
        COUNT=0
        until $COMMAND &>/dev/null || [ $COUNT -eq $MAX_ATTEMPTS ]
        do
          sleep 10
          COUNT=$((COUNT+1))
          echo "Attempt: $COUNT/$MAX_ATTEMPTS"
        done
        if [ $COUNT -eq $MAX_ATTEMPTS ]; then
          echo "Cassandra did not become ready within the expected time. Exiting..."
          exit 1
        fi
        echo "Cassandra is ready!"

    # - name: Wait for 30 seconds
    #   run: sleep 120
    # - name: Wait for 30 seconds
    #   run: docker exec cassandra1 cqlsh --debug cassandra1 9042 --execute="use somekeyspace;"      

    - name: Docker info
      run: docker ps

    # - name: Docker info2
    #   run: docker logs cassandra1

    - name: Cassandra cluster status
      run: docker exec cassandra1 nodetool status
        
    - name: Run Python script
      run: pipenv run python scripts/generate_data.py

    - name: Stop containers
      if: always()
      run: docker-compose -f "docker-compose.yaml" down
